// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: http_like_rpc.proto

#include "http_like_rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_http_5flike_5frpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HttpLikeObject_MapArgBinEntry_DoNotUse_http_5flike_5frpc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_http_5flike_5frpc_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HttpLikeObject_MapArgStringEntry_DoNotUse_http_5flike_5frpc_2eproto;
namespace HttpLikeRpc {
class HttpLikeObject_MapArgStringEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpLikeObject_MapArgStringEntry_DoNotUse> _instance;
} _HttpLikeObject_MapArgStringEntry_DoNotUse_default_instance_;
class HttpLikeObject_MapArgBinEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpLikeObject_MapArgBinEntry_DoNotUse> _instance;
} _HttpLikeObject_MapArgBinEntry_DoNotUse_default_instance_;
class HttpLikeObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpLikeObject> _instance;
} _HttpLikeObject_default_instance_;
}  // namespace HttpLikeRpc
static void InitDefaultsHttpLikeObject_MapArgStringEntry_DoNotUse_http_5flike_5frpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HttpLikeRpc::_HttpLikeObject_MapArgStringEntry_DoNotUse_default_instance_;
    new (ptr) ::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse();
  }
  ::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HttpLikeObject_MapArgStringEntry_DoNotUse_http_5flike_5frpc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHttpLikeObject_MapArgStringEntry_DoNotUse_http_5flike_5frpc_2eproto}, {}};

static void InitDefaultsHttpLikeObject_MapArgBinEntry_DoNotUse_http_5flike_5frpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HttpLikeRpc::_HttpLikeObject_MapArgBinEntry_DoNotUse_default_instance_;
    new (ptr) ::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse();
  }
  ::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HttpLikeObject_MapArgBinEntry_DoNotUse_http_5flike_5frpc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHttpLikeObject_MapArgBinEntry_DoNotUse_http_5flike_5frpc_2eproto}, {}};

static void InitDefaultsHttpLikeObject_http_5flike_5frpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::HttpLikeRpc::_HttpLikeObject_default_instance_;
    new (ptr) ::HttpLikeRpc::HttpLikeObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::HttpLikeRpc::HttpLikeObject::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_HttpLikeObject_http_5flike_5frpc_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsHttpLikeObject_http_5flike_5frpc_2eproto}, {
      &scc_info_HttpLikeObject_MapArgStringEntry_DoNotUse_http_5flike_5frpc_2eproto.base,
      &scc_info_HttpLikeObject_MapArgBinEntry_DoNotUse_http_5flike_5frpc_2eproto.base,}};

void InitDefaults_http_5flike_5frpc_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_HttpLikeObject_MapArgStringEntry_DoNotUse_http_5flike_5frpc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HttpLikeObject_MapArgBinEntry_DoNotUse_http_5flike_5frpc_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HttpLikeObject_http_5flike_5frpc_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_http_5flike_5frpc_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_http_5flike_5frpc_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_http_5flike_5frpc_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_http_5flike_5frpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse, value_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject, code_),
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject, message_),
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject, map_arg_string_),
  PROTOBUF_FIELD_OFFSET(::HttpLikeRpc::HttpLikeObject, map_arg_bin_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse)},
  { 9, 16, sizeof(::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse)},
  { 18, -1, sizeof(::HttpLikeRpc::HttpLikeObject)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::HttpLikeRpc::_HttpLikeObject_MapArgStringEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HttpLikeRpc::_HttpLikeObject_MapArgBinEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::HttpLikeRpc::_HttpLikeObject_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_http_5flike_5frpc_2eproto = {
  {}, AddDescriptors_http_5flike_5frpc_2eproto, "http_like_rpc.proto", schemas,
  file_default_instances, TableStruct_http_5flike_5frpc_2eproto::offsets,
  file_level_metadata_http_5flike_5frpc_2eproto, 3, file_level_enum_descriptors_http_5flike_5frpc_2eproto, file_level_service_descriptors_http_5flike_5frpc_2eproto,
};

const char descriptor_table_protodef_http_5flike_5frpc_2eproto[] =
  "\n\023http_like_rpc.proto\022\013HttpLikeRpc\"\236\002\n\016H"
  "ttpLikeObject\022\014\n\004code\030\001 \001(\r\022\017\n\007message\030\002"
  " \001(\t\022E\n\016map_arg_string\030\003 \003(\0132-.HttpLikeR"
  "pc.HttpLikeObject.MapArgStringEntry\022\?\n\013m"
  "ap_arg_bin\030\004 \003(\0132*.HttpLikeRpc.HttpLikeO"
  "bject.MapArgBinEntry\0323\n\021MapArgStringEntr"
  "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0320\n\016Map"
  "ArgBinEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:"
  "\0028\0012N\n\010HttpLike\022B\n\004Post\022\033.HttpLikeRpc.Ht"
  "tpLikeObject\032\033.HttpLikeRpc.HttpLikeObjec"
  "t\"\000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_http_5flike_5frpc_2eproto = {
  false, InitDefaults_http_5flike_5frpc_2eproto, 
  descriptor_table_protodef_http_5flike_5frpc_2eproto,
  "http_like_rpc.proto", &assign_descriptors_table_http_5flike_5frpc_2eproto, 411,
};

void AddDescriptors_http_5flike_5frpc_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_http_5flike_5frpc_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_http_5flike_5frpc_2eproto = []() { AddDescriptors_http_5flike_5frpc_2eproto(); return true; }();
namespace HttpLikeRpc {

// ===================================================================

HttpLikeObject_MapArgStringEntry_DoNotUse::HttpLikeObject_MapArgStringEntry_DoNotUse() {}
HttpLikeObject_MapArgStringEntry_DoNotUse::HttpLikeObject_MapArgStringEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void HttpLikeObject_MapArgStringEntry_DoNotUse::MergeFrom(const HttpLikeObject_MapArgStringEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HttpLikeObject_MapArgStringEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_http_5flike_5frpc_2eproto);
  return ::file_level_metadata_http_5flike_5frpc_2eproto[0];
}
void HttpLikeObject_MapArgStringEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HttpLikeObject_MapArgStringEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      HttpLikeObject_MapArgStringEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "HttpLikeRpc.HttpLikeObject.MapArgStringEntry.key"));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.value().data(), static_cast<int>(parser.value().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "HttpLikeRpc.HttpLikeObject.MapArgStringEntry.value"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

HttpLikeObject_MapArgBinEntry_DoNotUse::HttpLikeObject_MapArgBinEntry_DoNotUse() {}
HttpLikeObject_MapArgBinEntry_DoNotUse::HttpLikeObject_MapArgBinEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void HttpLikeObject_MapArgBinEntry_DoNotUse::MergeFrom(const HttpLikeObject_MapArgBinEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HttpLikeObject_MapArgBinEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_http_5flike_5frpc_2eproto);
  return ::file_level_metadata_http_5flike_5frpc_2eproto[1];
}
void HttpLikeObject_MapArgBinEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HttpLikeObject_MapArgBinEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      HttpLikeObject_MapArgBinEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "HttpLikeRpc.HttpLikeObject.MapArgBinEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void HttpLikeObject::InitAsDefaultInstance() {
}
class HttpLikeObject::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpLikeObject::kCodeFieldNumber;
const int HttpLikeObject::kMessageFieldNumber;
const int HttpLikeObject::kMapArgStringFieldNumber;
const int HttpLikeObject::kMapArgBinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpLikeObject::HttpLikeObject()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:HttpLikeRpc.HttpLikeObject)
}
HttpLikeObject::HttpLikeObject(const HttpLikeObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  map_arg_string_.MergeFrom(from.map_arg_string_);
  map_arg_bin_.MergeFrom(from.map_arg_bin_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:HttpLikeRpc.HttpLikeObject)
}

void HttpLikeObject::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_HttpLikeObject_http_5flike_5frpc_2eproto.base);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0u;
}

HttpLikeObject::~HttpLikeObject() {
  // @@protoc_insertion_point(destructor:HttpLikeRpc.HttpLikeObject)
  SharedDtor();
}

void HttpLikeObject::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HttpLikeObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HttpLikeObject& HttpLikeObject::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_HttpLikeObject_http_5flike_5frpc_2eproto.base);
  return *internal_default_instance();
}


void HttpLikeObject::Clear() {
// @@protoc_insertion_point(message_clear_start:HttpLikeRpc.HttpLikeObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_arg_string_.Clear();
  map_arg_bin_.Clear();
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0u;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* HttpLikeObject::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<HttpLikeObject*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 code = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_code(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // string message = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("HttpLikeRpc.HttpLikeObject.message");
        object = msg->mutable_message();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, string> map_arg_string = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->map_arg_string_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      // map<string, bytes> map_arg_bin = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->map_arg_bin_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool HttpLikeObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:HttpLikeRpc.HttpLikeObject)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HttpLikeRpc.HttpLikeObject.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> map_arg_string = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          HttpLikeObject_MapArgStringEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HttpLikeObject_MapArgStringEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&map_arg_string_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HttpLikeRpc.HttpLikeObject.MapArgStringEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HttpLikeRpc.HttpLikeObject.MapArgStringEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> map_arg_bin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          HttpLikeObject_MapArgBinEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HttpLikeObject_MapArgBinEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&map_arg_bin_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "HttpLikeRpc.HttpLikeObject.MapArgBinEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:HttpLikeRpc.HttpLikeObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:HttpLikeRpc.HttpLikeObject)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void HttpLikeObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:HttpLikeRpc.HttpLikeObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HttpLikeRpc.HttpLikeObject.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // map<string, string> map_arg_string = 3;
  if (!this->map_arg_string().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "HttpLikeRpc.HttpLikeObject.MapArgStringEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "HttpLikeRpc.HttpLikeObject.MapArgStringEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_arg_string().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_arg_string().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_arg_string().begin();
          it != this->map_arg_string().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HttpLikeObject_MapArgStringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_arg_string_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<HttpLikeObject_MapArgStringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_arg_string().begin();
          it != this->map_arg_string().end(); ++it) {
        entry.reset(map_arg_string_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, bytes> map_arg_bin = 4;
  if (!this->map_arg_bin().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "HttpLikeRpc.HttpLikeObject.MapArgBinEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->map_arg_bin().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_arg_bin().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_arg_bin().begin();
          it != this->map_arg_bin().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HttpLikeObject_MapArgBinEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_arg_bin_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<HttpLikeObject_MapArgBinEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_arg_bin().begin();
          it != this->map_arg_bin().end(); ++it) {
        entry.reset(map_arg_bin_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(4, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:HttpLikeRpc.HttpLikeObject)
}

::google::protobuf::uint8* HttpLikeObject::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:HttpLikeRpc.HttpLikeObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "HttpLikeRpc.HttpLikeObject.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // map<string, string> map_arg_string = 3;
  if (!this->map_arg_string().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "HttpLikeRpc.HttpLikeObject.MapArgStringEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "HttpLikeRpc.HttpLikeObject.MapArgStringEntry.value");
      }
    };

    if (false &&
        this->map_arg_string().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_arg_string().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_arg_string().begin();
          it != this->map_arg_string().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HttpLikeObject_MapArgStringEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_arg_string_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<HttpLikeObject_MapArgStringEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_arg_string().begin();
          it != this->map_arg_string().end(); ++it) {
        entry.reset(map_arg_string_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(3, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // map<string, bytes> map_arg_bin = 4;
  if (!this->map_arg_bin().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "HttpLikeRpc.HttpLikeObject.MapArgBinEntry.key");
      }
    };

    if (false &&
        this->map_arg_bin().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->map_arg_bin().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_arg_bin().begin();
          it != this->map_arg_bin().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HttpLikeObject_MapArgBinEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(map_arg_bin_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<HttpLikeObject_MapArgBinEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->map_arg_bin().begin();
          it != this->map_arg_bin().end(); ++it) {
        entry.reset(map_arg_bin_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(4, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HttpLikeRpc.HttpLikeObject)
  return target;
}

size_t HttpLikeObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HttpLikeRpc.HttpLikeObject)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> map_arg_string = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_arg_string_size());
  {
    ::std::unique_ptr<HttpLikeObject_MapArgStringEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->map_arg_string().begin();
        it != this->map_arg_string().end(); ++it) {
      entry.reset(map_arg_string_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, bytes> map_arg_bin = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->map_arg_bin_size());
  {
    ::std::unique_ptr<HttpLikeObject_MapArgBinEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->map_arg_bin().begin();
        it != this->map_arg_bin().end(); ++it) {
      entry.reset(map_arg_bin_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // uint32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HttpLikeObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:HttpLikeRpc.HttpLikeObject)
  GOOGLE_DCHECK_NE(&from, this);
  const HttpLikeObject* source =
      ::google::protobuf::DynamicCastToGenerated<HttpLikeObject>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:HttpLikeRpc.HttpLikeObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:HttpLikeRpc.HttpLikeObject)
    MergeFrom(*source);
  }
}

void HttpLikeObject::MergeFrom(const HttpLikeObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HttpLikeRpc.HttpLikeObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_arg_string_.MergeFrom(from.map_arg_string_);
  map_arg_bin_.MergeFrom(from.map_arg_bin_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void HttpLikeObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:HttpLikeRpc.HttpLikeObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpLikeObject::CopyFrom(const HttpLikeObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HttpLikeRpc.HttpLikeObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpLikeObject::IsInitialized() const {
  return true;
}

void HttpLikeObject::Swap(HttpLikeObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpLikeObject::InternalSwap(HttpLikeObject* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  map_arg_string_.Swap(&other->map_arg_string_);
  map_arg_bin_.Swap(&other->map_arg_bin_);
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
}

::google::protobuf::Metadata HttpLikeObject::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_http_5flike_5frpc_2eproto);
  return ::file_level_metadata_http_5flike_5frpc_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace HttpLikeRpc
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse* Arena::CreateMaybeMessage< ::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::HttpLikeRpc::HttpLikeObject_MapArgStringEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse* Arena::CreateMaybeMessage< ::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::HttpLikeRpc::HttpLikeObject_MapArgBinEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::HttpLikeRpc::HttpLikeObject* Arena::CreateMaybeMessage< ::HttpLikeRpc::HttpLikeObject >(Arena* arena) {
  return Arena::CreateInternal< ::HttpLikeRpc::HttpLikeObject >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
